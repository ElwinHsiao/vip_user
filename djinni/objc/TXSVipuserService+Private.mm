// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from vipuser.djinni

#import "TXSVipuserService+Private.h"
#import "TXSVipuserService.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "TXSAccessTicket+Private.h"
#import "TXSAccountInfo+Private.h"
#import "TXSVipuserListener+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface TXSVipuserService ()

- (id)initWithCpp:(const std::shared_ptr<::textsort::VipuserService>&)cppRef;

@end

@implementation TXSVipuserService {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::textsort::VipuserService>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::textsort::VipuserService>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)createAccount:(nonnull TXSAccountInfo *)account {
    try {
        _cppRefHandle.get()->create_account(::djinni_generated::AccountInfo::toCpp(account));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)login:(nonnull TXSAccountInfo *)account {
    try {
        _cppRefHandle.get()->login(::djinni_generated::AccountInfo::toCpp(account));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)reLogin:(nonnull TXSAccessTicket *)ticket {
    try {
        _cppRefHandle.get()->re_login(::djinni_generated::AccessTicket::toCpp(ticket));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)logout:(nonnull TXSAccessTicket *)ticket {
    try {
        _cppRefHandle.get()->logout(::djinni_generated::AccessTicket::toCpp(ticket));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)doBusiness:(nonnull TXSAccessTicket *)ticket
           request:(nonnull NSData *)request {
    try {
        _cppRefHandle.get()->do_business(::djinni_generated::AccessTicket::toCpp(ticket),
                                         ::djinni::Binary::toCpp(request));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable TXSVipuserService *)createWithListener:(nullable id<TXSVipuserListener>)listener {
    try {
        auto objcpp_result_ = ::textsort::VipuserService::create_with_listener(::djinni_generated::VipuserListener::toCpp(listener));
        return ::djinni_generated::VipuserService::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto VipuserService::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto VipuserService::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<TXSVipuserService>(cpp);
}

}  // namespace djinni_generated

@end
