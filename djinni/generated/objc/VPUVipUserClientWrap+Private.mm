// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from vipuser.djinni

#import "VPUVipUserClientWrap+Private.h"
#import "VPUVipUserClientWrap.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "VPUAccessTicket+Private.h"
#import "VPUAccountInfo+Private.h"
#import "VPUVipUserWrapListener+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface VPUVipUserClientWrap ()

- (id)initWithCpp:(const std::shared_ptr<::vipuser::VipUserClientWrap>&)cppRef;

@end

@implementation VPUVipUserClientWrap {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::vipuser::VipUserClientWrap>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::vipuser::VipUserClientWrap>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

- (void)createAccount:(nonnull VPUAccountInfo *)account {
    try {
        _cppRefHandle.get()->create_account(::djinni_generated::AccountInfo::toCpp(account));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)login:(nonnull VPUAccountInfo *)account {
    try {
        _cppRefHandle.get()->login(::djinni_generated::AccountInfo::toCpp(account));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)reLogin:(nonnull VPUAccessTicket *)ticket {
    try {
        _cppRefHandle.get()->re_login(::djinni_generated::AccessTicket::toCpp(ticket));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)logout:(nonnull VPUAccessTicket *)ticket {
    try {
        _cppRefHandle.get()->logout(::djinni_generated::AccessTicket::toCpp(ticket));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)doBusiness:(nonnull VPUAccessTicket *)ticket
           request:(nonnull NSData *)request {
    try {
        _cppRefHandle.get()->do_business(::djinni_generated::AccessTicket::toCpp(ticket),
                                         ::djinni::Binary::toCpp(request));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

+ (nullable VPUVipUserClientWrap *)createWithListener:(nullable id<VPUVipUserWrapListener>)listener {
    try {
        auto objcpp_result_ = ::vipuser::VipUserClientWrap::create_with_listener(::djinni_generated::VipUserWrapListener::toCpp(listener));
        return ::djinni_generated::VipUserClientWrap::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto VipUserClientWrap::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto VipUserClientWrap::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<VPUVipUserClientWrap>(cpp);
}

}  // namespace djinni_generated

@end
